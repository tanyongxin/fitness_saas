<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="stores_course.dao.CourseMapper">
  <resultMap id="BaseResultMap" type="api.pojo.Course">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="teacher_id" jdbcType="INTEGER" property="teacherId" />
    <result column="stores_id" jdbcType="INTEGER" property="storesId" />
    <result column="classroom" jdbcType="VARCHAR" property="classroom" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="is_start" jdbcType="BIT" property="isStart" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="start_time" jdbcType="INTEGER" property="startTime" />
    <result column="end_time" jdbcType="INTEGER" property="endTime" />
  </resultMap>

  <sql id="Base_Column_List">
     id,teacher_id,stores_id,classroom,pic,is_start,course_name,start_time,end_time
  </sql>

  <select id="findCourseById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    id,teacher_id,stores_id,classroom,pic,is_start,course_name,FROM_UNIXTIME(start_time) as startTime,FROM_UNIXTIME(end_time) as endTime
    from course_${suffix}
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="findCourseByTeacherId" parameterType="map" resultMap="BaseResultMap">
    select
    id,teacher_id,stores_id,classroom,pic,is_start,course_name,FROM_UNIXTIME(start_time) as startTime,FROM_UNIXTIME(end_time) as endTime
    from course_${suffix}
    where id > #{lastId} and stores_id = #{storesId} and teacher_id = #{teacherId,jdbcType=INTEGER} and is_start = #{isStart} limit #{pageSize}
  </select>

  <select id="findCourseByTime" parameterType="map" resultMap="BaseResultMap">
    select
    id,teacher_id,stores_id,classroom,pic,is_start,course_name,FROM_UNIXTIME(start_time) as startTime,FROM_UNIXTIME(end_time) as endTime
    from course_${suffix}
    where id > #{lastId} and stores_id = #{storesId} and start_time >= UNIX_TIMESTAMP(#{startTime}) and end_time <![CDATA[ <= ]]> UNIX_TIMESTAMP(#{endTime}) and is_start = 0 limit #{pageSize}
  </select>

  <select id="findCourseByStoresId" parameterType="map" resultMap="BaseResultMap">
    select
    id,teacher_id,stores_id,classroom,pic,is_start,course_name,FROM_UNIXTIME(start_time) as startTime,FROM_UNIXTIME(end_time) as endTime
    from course_${suffix}
    where id > #{lastId} and stores_id = #{storesId} and is_start = #{isStart} limit #{pageSize}
  </select>

  <delete id="delCourse" parameterType="map">
      update course_${suffix} set is_start = 0 where id = #{id,jdbcType=INTEGER}
  </delete>

<!--     id,teacher_id,stores_id,classroom,pic,is_start,course_name,start_time,end_time -->
  <insert id="addCourse" parameterType="map" keyProperty="id" keyColumn="id" useGeneratedKeys="true">
    insert into course_${suffix}
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="course.id != null">
        id,
      </if>
      <if test="course.teacherId != null">
        teacher_id,
      </if>
      <if test="course.storesId != null">
        stores_id,
      </if>
      <if test="course.classroom != null">
        classroom,
      </if>
      <if test="course.pic != null">
        pic,
      </if>
      <if test="course.isStart != null">
        is_start,
      </if>
      <if test="course.courseName != null">
        course_name,
      </if>
      <if test="course.startTime != null">
        start_time,
      </if>
      <if test="course.endTime != null">
        end_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="course.id != null">
        #{course.id,jdbcType=INTEGER},
      </if>
      <if test="course.teacherId != null">
        #{course.teacherId,jdbcType=INTEGER},
      </if>
      <if test="course.storesId != null">
        #{course.storesId,jdbcType=INTEGER},
      </if>
      <if test="course.classroom != null">
        #{course.classroom,jdbcType=VARCHAR},
      </if>
      <if test="course.pic != null">
        #{course.pic,jdbcType=VARCHAR},
      </if>
      <if test="course.isStart != null">
        #{course.isStart,jdbcType=BIT},
      </if>
      <if test="course.courseName != null">
        #{course.courseName,jdbcType=VARCHAR},
      </if>
      <if test="course.startTime != null">
        UNIX_TIMESTAMP(#{course.startTime,jdbcType=INTEGER}),
      </if>
      <if test="course.endTime != null">
        UNIX_TIMESTAMP(#{course.endTime,jdbcType=INTEGER}),
      </if>
    </trim>

  </insert>

  <update id="updateCourse" parameterType="map">
    update course_${suffix}
    <set>
      <if test="course.teacherId != null">
        teacher_id = #{course.teacherId,jdbcType=INTEGER},
      </if>
      <if test="course.storesId != null">
        stores_id = #{course.storesId,jdbcType=INTEGER},
      </if>
      <if test="course.classroom != null">
        classroom = #{course.classroom,jdbcType=VARCHAR},
      </if>
      <if test="course.pic != null">
        pic = #{course.pic,jdbcType=VARCHAR},
      </if>
      <if test="course.isStart != null">
        is_start = #{course.isStart,jdbcType=BIT},
      </if>
      <if test="course.courseName != null">
        course_name = #{course.courseName,jdbcType=VARCHAR},
      </if>
      <if test="course.startTime != null">
        start_time = UNIX_TIMESTAMP(#{course.startTime,jdbcType=INTEGER}),
      </if>
      <if test="course.endTime != null">
        end_time = UNIX_TIMESTAMP(#{course.endTime,jdbcType=INTEGER}),
      </if>
    </set>
    where id = #{course.id,jdbcType=INTEGER}
  </update>


</mapper>