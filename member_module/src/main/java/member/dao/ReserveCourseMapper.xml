<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member.dao.ReserveCourseMapper">
  <resultMap id="BaseResultMap" type="api.pojo.ReserveCourse">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="memberId" jdbcType="INTEGER" property="memberId" />
    <result column="courseId" jdbcType="INTEGER" property="courseId" />
    <result column="brandId" jdbcType="INTEGER" property="brandId" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="expectTime" jdbcType="INTEGER" property="expectTime" />
    <result column="otherMess" jdbcType="VARCHAR" property="otherMess" />
  </resultMap>
  
  <sql id="Base_Column_List">
    id, memberId, courseId,number,expectTime,otherMess,brandId
  </sql>

  <insert id="addReserveCourse" parameterType="api.pojo.ReserveCourse" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
    insert into reserve_course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="memberId != null">
        memberId,
      </if>
      <if test="courseId != null">
        courseId,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="expectTime != null">
        expectTime,
      </if>
      <if test="otherMess != null">
        otherMess,
      </if>
      <if test="brandId != null">
        brandId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="expectTime != null">
        UNIX_TIMESTAMP(#{expectTime,jdbcType=INTEGER}),
      </if>
      <if test="otherMess != null">
        #{otherMess,jdbcType=VARCHAR},
      </if>
      <if test="brandId != null">
        #{brandId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="updateReserveCourse" parameterType="api.pojo.ReserveCourse">
    update reserve_course
    <set>
      <!--<if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>-->
      <if test="expectTime != null">
        expectTime = UNIX_TIMESTAMP(#{expectTime,jdbcType=INTEGER}),
      </if>
      <if test="otherMess != null">
        otherMess = #{otherMess,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findReserveCourseById" parameterType="int" resultMap="BaseResultMap">
    select id, memberId, courseId,number,FROM_UNIXTIME(expectTime) as expectTime,otherMess,brandId
    from reserve_course where id = #{id}
  </select>

  <select id="findReserveCourseByMemberId" parameterType="map" resultMap="BaseResultMap">
    select id, memberId, courseId,number,FROM_UNIXTIME(expectTime) as expectTime,otherMess,brandId
    from reserve_course where id > #{lastId} and memberId = #{course.memberId} limit #{pageSize}
  </select>

  <select id="getMinId" parameterType="int" resultType="int">
    select min(id) from reserve_course where memberId = #{memberId}
  </select>

  <select id="findReserveNumberByCourseId" parameterType="map" resultType="int">
      select count(*) from  reserve_course where brandId = #{brandId} and courseId = #{courseId}
  </select>

</mapper>